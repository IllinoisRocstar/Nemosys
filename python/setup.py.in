from setuptools import setup, Extension
# from distutils.core import setup, Extension
import sys

if sys.platform == 'win32':
    runtime_lib_dirs = []
else:
    runtime_lib_dirs = ['$ORIGIN', '${CMAKE_INSTALL_PREFIX}/lib']

pyNemosys = Extension(
    '_pyNemosys',
    sources='${WRAPPER_SOURCE_FILES}'.split(';'),
    include_dirs=list(filter(None, (
            '${WRAPPER_INCLUDE_DIRS}'.split(';')
            + '${VTK_INCLUDE_DIRS}'.split(';')
            + '${GMSH_INCPATH}'.split(';')
            + '${OpenCASCADE_INCLUDE_DIR}'.split(';')
            + '${CGNS_INCPATH}'.split(';')
            + '${MADLIB_INCPATH}'.split(';')
            + '${ANN_INCPATH}'.split(';')
            + '${JSONCONS_INCPATH}'.split(';')
            + '${METIS_INCPATH}'.split(';')
            + '${NETGEN_INCLUDE_DIRS}'.split(';')
            + '${EXTRA_INCLUDE_DIRS}'.split(';')
    ))),
    libraries=(
            ['Nemosys',
             '${VTK_COMMON_CORE_LIB}'
             ]
    ),
    library_dirs=(
            ['${CMAKE_BINARY_DIR}',
             '${VTK_LIB_DIR}',
             '${VTK_LIB_DIR}/../lib'
             ]
    ),
    runtime_library_dirs=runtime_lib_dirs,
    swig_opts=list(filter(None, (
            ['-c++', '-DNEMOSYS_EXPORT=']
            + '${EXTRA_COMPILE_ARGS}'.split(';')
    ))),
    extra_compile_args=list(filter(None, (
            ['-std=c++11', '-w']
            + '${EXTRA_COMPILE_ARGS}'.split(';')
    )))
)

setup(
    name='pyNemosys',
    version='${NEMOSYS_VERSION}',
    url='${NEMOSYS_HOMEPAGE_URL}',
    author='${NEMOSYS_AUTHOR}',
    author_email='${NEMOSYS_AUTHOR_EMAIL}',
    classifiers='${NEMOSYS_PYTHON_CLASSIFIERS}'.split(';'),
    license='${NEMOSYS_SHORT_LICENSE}',
    description='${NEMOSYS_DESCRIPTION}',
    py_modules=['pyNemosys'],
    ext_modules=[pyNemosys],
    test_suite='test_pyNemosys27'
)
